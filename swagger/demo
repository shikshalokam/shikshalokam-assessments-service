paths:
  /driver/find:
    get : 
      description: Returns all drivers from the system that the user has access to
      operationId: finddrivers
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: token
          in: header
          description: Authorization Token
          format: string
          required: true
      # parameters:
        # - name: tags
        #   in: query
        #   description: tags to filter by
        #   required: false
        #   type: array
        #   items:
        #     type: string
        #   collectionFormat: csv
        # - name: limit
        #   in: query
        #   description: maximum number of results to return
        #   required: false
        #   type: integer
        #   format: int32
      tags:
        - Driver
      responses:
        '200':
          description: driver response
          schema:
            type: array
            items:
              $ref: '#/definitions/driver'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

  /driver/findByIdAndUpdate:
    post:
      description: Returns a user based on a single ID
      operationId: findUserById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: driver
          in: body
          description: driver to add to the store
          required: true
          schema:
            $ref: '#/definitions/driver'
        - name: token
          in: query
          description: Authorization Token
          format: string
          required: true
      tags:
        - Driver
      responses:
        '200':
          description: driver response
          schema:
            $ref: '#/definitions/driver'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Creates a new driver in the store.  Duplicates are allowed
      operationId: adddriver
      produces:
        - application/json
      parameters:
        - name: driver
          in: body
          description: driver to add to the store
          required: true
          schema:
            $ref: '#/definitions/driver'
      tags:
        - Driver
      responses:
        '200':
          description: driver response
          schema:
            $ref: '#/definitions/driver'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

  /driver/create:
    post:
      description: Creates a new driver in the store.  Duplicates are allowed
      operationId: adddriver
      produces:
        - application/json
      parameters:
        - name: driver
          in: body
          description: driver to add to the store
          required: true
          schema:
            $ref: '#/definitions/driver'
      tags:
        - Driver
      responses:
        '200':
          description: driver response
          schema:
            $ref: '#/definitions/driver'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

  /driver/remove:
    delete:
      description: deletes a single driver based on the ID supplied
      operationId: deletedriver
      parameters:
        - name: id
          in: path
          description: ID of driver to delete
          required: true
          type: integer
          format: int64
      tags:
        - Driver
      responses:
        '204':
          description: driver deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

definitions:
  driver:
    type: object
    required:
      - id
    properties:
      _id:
        type: string
      firstname:
        type: string
      lastname:
        type: string